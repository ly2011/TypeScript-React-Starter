{"version":3,"sources":["utils/time.ts","utils/assist.ts","utils/request.ts","config/index.ts","apis/cnode.ts","containers/Topics/index.module.scss","containers/Topic/index.module.scss","utils/tabs.ts","containers/Topics/index.tsx","actions/topics.ts","containers/Topic/index.tsx","actions/topic.ts"],"names":["__webpack_require__","d","__webpack_exports__","formatDate","str","date","Date","time","getTime","Math","floor","tabTypes","getTagInfo","topic","top","text","className","good","tab","axios","defaults","headers","common","transformRequest","data","qs","stringify","service","create","baseURL","timeout","Content-Type","interceptors","request","use","config","error","Promise","reject","response","cnode_getTopics","cnode_getTopic","BASE_URL","getTopics","_ref","arguments","length","undefined","_ref$page","page","_ref$tab","_ref$limit","limit","_ref$mdrender","mdrender","method","url","params","getTopic","_params$id","id","concat","module","exports","header","topic_tab","current_tab","pagination","container","title","changes","manage_topic","edit-btn","del-btn","topic-content","topic_content","tag","topTabs","TopicList","Loadable","loader","e","then","bind","loading","Loading","SideBar","Topics","changeTab","item","fetchTopics","_this","props","actions","handlePaginationChange","this","_this2","_this$props","_this$props$topics","topics","pageInfo","react_default","a","createElement","styles","map","key","onClick","table_box","skeleton","active","total","defaultCurrent","pageSize","onChange","React","Component","topicsActions","state","store","getState","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_params$tab","_params$page","_params$limit","clear","searchParams","res","wrap","_context","prev","next","type","constants","objectSpread","api","sent","success","t0","stop","_x","apply","connect","ownProps","bindActionCreators","Topic","fetchTopic","match","accesstoken","create_at","author","loginname","visit_count","last_reply_at","is_collect","es_button","size","Link","to","icon","style","fontSize","href","dangerouslySetInnerHTML","__html","content","_topic","user"],"mappings":"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","file":"static/js/Topics.0eac5981.chunk.js","sourcesContent":["/**\r\n * 格式化时间\r\n */\r\nexport const formatDate = (str: number | string): string => {\r\n  if (!str) return ''\r\n  const date = new Date(str)\r\n  const time = new Date().getTime() - date.getTime() // 现在的时间-传入的时间 = 相差的时间（单位 = 毫秒）\r\n  if (time < 0) {\r\n    return ''\r\n  } else if (time / 1000 < 30) {\r\n    return '刚刚'\r\n  } else if (time / 1000 < 60) {\r\n    return Math.floor(time / 1000) + '秒前'\r\n  } else if (time / 60000 < 60) {\r\n    return Math.floor(time / 60000) + '分钟前'\r\n  } else if (time / 3600000 < 24) {\r\n    return Math.floor(time / 3600000) + '小时前'\r\n  } else if (time / 86400000 < 31) {\r\n    return Math.floor(time / 86400000) + '天前'\r\n  } else if (time / 2592000000 < 12) {\r\n    return Math.floor(time / 2592000000) + '月前'\r\n  } else {\r\n    return Math.floor(time / 31536000000) + '年前'\r\n  }\r\n}\r\n","export enum tabTypes {\r\n  ask = 'ask',\r\n  share = 'share',\r\n  job = 'job',\r\n  good = 'good',\r\n  dev = 'dev'\r\n}\r\nexport type TopicDetailType = {\r\n  id: string\r\n  title: string\r\n  create_at: string\r\n  author: {\r\n    avatar_url: string\r\n    loginname: string\r\n  }\r\n  author_id: string\r\n  reply_count: number // 回复数\r\n  visit_count: number // 点击数\r\n  good: boolean // 是否是精华\r\n  top: boolean // 是否置顶\r\n  last_reply_at: string // 最后更新时间\r\n  is_collect: boolean\r\n  tab: tabTypes\r\n  content: string\r\n}\r\n\r\n/**\r\n * 获取话题tag\r\n * @param topic 话题\r\n */\r\nexport const getTagInfo = (topic: TopicDetailType) => {\r\n  if (topic.top) {\r\n    return {\r\n      text: '置顶',\r\n      className: 'top'\r\n    }\r\n  }\r\n  if (topic.good) {\r\n    return {\r\n      text: '精华',\r\n      className: 'good'\r\n    }\r\n  }\r\n\r\n  switch (topic.tab) {\r\n    case 'ask': {\r\n      return {\r\n        text: '问答',\r\n        className: topic.tab\r\n      }\r\n    }\r\n    case 'share': {\r\n      return {\r\n        text: '分享',\r\n        className: topic.tab\r\n      }\r\n    }\r\n    case 'job': {\r\n      return {\r\n        text: '招聘',\r\n        className: topic.tab\r\n      }\r\n    }\r\n    case 'good': {\r\n      return {\r\n        text: '精华',\r\n        className: topic.tab\r\n      }\r\n    }\r\n    case 'dev': {\r\n      return {\r\n        text: '测试',\r\n        className: topic.tab\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        text: '',\r\n        className: 'default'\r\n      }\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport qs from 'qs'\r\nimport { BASE_API } from '../config'\r\n\r\n// 设置默认请求头\r\naxios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded'\r\n// 发送请求前处理request的数据\r\naxios.defaults.transformRequest = [\r\n  function(data) {\r\n    return qs.stringify(data)\r\n  }\r\n]\r\n// 带cookie请求\r\n// axios.defaults.withCredentials = true;\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: BASE_API, // api的base_url\r\n  timeout: 15000, // 请求超时时间\r\n  transformRequest: [\r\n    function(data) {\r\n      // Do whatever you want to transform the data\r\n      return qs.stringify(data)\r\n    }\r\n  ],\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }\r\n})\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    if (!config.data) {\r\n      config.data = {}\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    // Do something with request error console.log(error); // for debug\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","export const BASE_API = 'https://cnodejs.org/api/v1'\r\n","import request from '../utils/request'\r\n\r\nconst BASE_URL = 'https://cnodejs.org/api/v1'\r\n\r\ntype topicParams = {\r\n  id?: string\r\n  [prop: string]: string | undefined\r\n}\r\nexport const getTopics = ({ page = 1, tab = 'share', limit = 20, mdrender = 'false' } = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'get',\r\n    url: '/topics',\r\n    params: {\r\n      page,\r\n      tab,\r\n      limit,\r\n      mdrender\r\n    }\r\n  })\r\n\r\nexport const getTopic = (params: topicParams = {}) => {\r\n  const { id = '' } = params\r\n  delete params.id\r\n  return request({\r\n    baseURL: BASE_URL,\r\n    method: 'get',\r\n    url: `/topic/${id}`,\r\n    params\r\n  })\r\n}\r\n\r\nexport const Login = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'post',\r\n    url: '/accesstoken',\r\n    data: params\r\n  })\r\n\r\nexport const getMessages = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'get',\r\n    url: '/messages',\r\n    params: params\r\n  })\r\n\r\nexport const getUserInfo = (loginname = '') =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'get',\r\n    url: `/user/${loginname}`\r\n  })\r\n\r\n/* 新建主题 */\r\nexport const addTopic = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'post',\r\n    url: '/topics',\r\n    data: params\r\n  })\r\n\r\nexport const updateTopic = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'post',\r\n    url: '/topics/update',\r\n    data: params\r\n  })\r\n\r\n/* 收藏主题 */\r\nexport const collectTopic = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'post',\r\n    url: '/topic_collect/collect',\r\n    data: params\r\n  })\r\n\r\n/* 取消主题 */\r\nexport const delTopic = (params = {}) =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'post',\r\n    url: '/topic_collect/de_collect',\r\n    data: params\r\n  })\r\n\r\n/* 话题收藏数 */\r\nexport const getTopicCollect = (loginname = '') =>\r\n  request({\r\n    baseURL: BASE_URL,\r\n    method: 'get',\r\n    url: `/topic_collect/${loginname}`\r\n  })\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Topics_header__2BWFb\",\"topic_tab\":\"Topics_topic_tab__2CABq\",\"current_tab\":\"Topics_current_tab__2GBAe\",\"pagination\":\"Topics_pagination__2CQfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Topic_container__3KOph\",\"header\":\"Topic_header__2Ftxv\",\"title\":\"Topic_title__2sIw-\",\"changes\":\"Topic_changes__Tuv_n\",\"manage_topic\":\"Topic_manage_topic__a1mKy\",\"edit-btn\":\"Topic_edit-btn__2B8Mg\",\"del-btn\":\"Topic_del-btn__Hmh1O\",\"topic\":\"Topic_topic__10BnA\",\"topic-content\":\"Topic_topic-content__KDmzr\",\"topic_content\":\"Topic_topic_content__3FXrq\",\"tag\":\"Topic_tag__1-M3A\",\"good\":\"Topic_good__3BDvC\",\"top\":\"Topic_top__3qh80\"};","export const topTabs = [\r\n  { title: '全部', tab: '' },\r\n  { title: '精华', tab: 'good' },\r\n  { title: '分享', tab: 'share' },\r\n  { title: '问答', tab: 'ask' },\r\n  { title: '招聘', tab: 'job' },\r\n  { title: '客户端测试', tab: 'dev' }\r\n]\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\nimport { Pagination, Skeleton } from 'antd'\r\nimport Loadable from 'react-loadable'\r\n\r\nimport Loading from '@/components/Loading'\r\n\r\nimport { topTabs } from '@/utils/tabs'\r\n\r\n// 引入actions\r\nimport { getTopics } from '@/actions/topics'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nconst TopicList = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"TopicList\" */ '@/components/TopicList'),\r\n  loading: Loading\r\n})\r\nconst SideBar = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"SideBar\" */ '@/components/SideBar'),\r\n  loading: Loading\r\n})\r\n\r\ntype tabProps = {\r\n  title: string\r\n  tab: string\r\n}\r\nclass Topics extends React.Component<any, any> {\r\n  componentDidMount() {\r\n    const { getTopics: fetchTopics } = this.props.actions\r\n    fetchTopics()\r\n  }\r\n  changeTab = (item: tabProps) => {\r\n    const { getTopics: fetchTopics } = this.props.actions\r\n    const { tab } = item\r\n    if (tab === this.props.tab) {\r\n      return\r\n    }\r\n    const params = { tab: tab, page: 1 }\r\n    fetchTopics(params)\r\n  }\r\n  handlePaginationChange = (page: number) => {\r\n    const params = {\r\n      tab: this.props.tab,\r\n      page\r\n    }\r\n    const { getTopics: fetchTopics } = this.props.actions\r\n    fetchTopics(params)\r\n  }\r\n  render() {\r\n    const { topics = [], loading, tab, pageInfo } = this.props\r\n    return (\r\n      <section className={styles.container}>\r\n        <div className=\"main\">\r\n          <SideBar />\r\n          <div className=\"content\">\r\n            <div className=\"panel\">\r\n              <header className=\"header\">\r\n                {topTabs &&\r\n                  topTabs.map(item => (\r\n                    <a\r\n                      className={`${styles.topic_tab} ${styles[item.tab === tab ? 'current_tab' : '']}`}\r\n                      key={item.tab}\r\n                      onClick={() => this.changeTab(item)}\r\n                    >\r\n                      {item.title}\r\n                    </a>\r\n                  ))}\r\n              </header>\r\n              <div className={`inner no-padding ${styles.table_box}`}>\r\n                <Skeleton loading={loading} active>\r\n                  <TopicList topics={topics} />\r\n                  {pageInfo.total && (\r\n                    <div className={styles.pagination}>\r\n                      <Pagination\r\n                        defaultCurrent={pageInfo.page}\r\n                        pageSize={pageInfo.limit}\r\n                        total={pageInfo.total}\r\n                        onChange={this.handlePaginationChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Skeleton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n// export default Topics\r\nconst topicsActions = { getTopics }\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  // console.log('state: ', state)\r\n  return {\r\n    topics: state.topics.topics,\r\n    loading: state.topics.loading,\r\n    tab: state.topics.tab,\r\n    pageInfo: state.topics.pageInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: any) => {\r\n  return {\r\n    actions: bindActionCreators(topicsActions, dispatch)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Topics)\r\n","import { Dispatch } from 'redux'\r\nimport * as constants from '../constants/topics'\r\nimport * as api from '../apis/cnode'\r\nimport store from '../store'\r\nimport { TopicsState, tabTypes } from '../schemas'\r\n\r\nexport type SetTopics = {\r\n  type: constants.SET_TOPICS\r\n  data: TopicsState\r\n}\r\n\r\nexport interface topicsParams {\r\n  page?: number\r\n  tab?: tabTypes\r\n  limit?: number\r\n  mdrender?: string\r\n}\r\n/**\r\n * 获取主题列表信息\r\n * @param params topicsParams\r\n */\r\nexport const getTopics = (params: topicsParams = { page: 1 }) => {\r\n  const state = store.getState()\r\n  // console.log('global state: ', state)\r\n  return async (dispatch: Dispatch) => {\r\n    const { tab = '', page = 1, limit = state.topics.pageInfo.limit } = params\r\n    const clear = true\r\n    dispatch({\r\n      type: constants.SET_LOADING,\r\n      data: true\r\n    })\r\n    const pageInfo = {\r\n      ...state.topics.pageInfo,\r\n      page,\r\n      limit\r\n    }\r\n    const searchParams = { ...pageInfo, tab }\r\n\r\n    dispatch({\r\n      type: constants.SET_TAB,\r\n      data: { tab }\r\n    })\r\n    dispatch({\r\n      type: constants.SET_PAGE_INFO,\r\n      data: pageInfo\r\n    })\r\n    try {\r\n      const res: any = await api.getTopics(searchParams)\r\n      if (res.success) {\r\n        dispatch({\r\n          type: constants.SET_TOPICS,\r\n          data: { topics: res.data, clear }\r\n        })\r\n      }\r\n      dispatch({\r\n        type: constants.SET_LOADING,\r\n        data: false\r\n      })\r\n    } catch (err) {\r\n      if (state.topics.tab === tab) {\r\n        // 拉取更多失败\r\n        dispatch({\r\n          type: constants.SET_PAGE_INFO,\r\n          data: {\r\n            page: state.topics.pageInfo.page\r\n          }\r\n        })\r\n      }\r\n      dispatch({\r\n        type: constants.SET_LOADING,\r\n        data: false\r\n      })\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RouteComponentProps, Link } from 'react-router-dom'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\nimport { Skeleton, Button, Icon } from 'antd'\r\nimport Loadable from 'react-loadable'\r\nimport { formatDate } from '@/utils/time'\r\nimport Loading from '@/components/Loading'\r\n\r\n// 引入actions\r\nimport { getTopic } from '@/actions/topic'\r\nimport { TopicDetailType, getTagInfo } from '@/utils/assist'\r\nimport styles from './index.module.scss'\r\n\r\nconst SideBar = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"SideBar\" */ '@/components/SideBar'),\r\n  loading: Loading\r\n})\r\n\r\ntype TopicProps = RouteComponentProps & {\r\n  topic: TopicDetailType\r\n  loading: boolean\r\n  accesstoken: string\r\n  actions: any\r\n}\r\n\r\nclass Topic extends React.Component<TopicProps, any> {\r\n  componentDidMount() {\r\n    const { getTopic: fetchTopic } = this.props.actions\r\n    const { match } = this.props\r\n    const { id }: any = match.params\r\n\r\n    fetchTopic({ id })\r\n  }\r\n  render() {\r\n    const { topic, loading, accesstoken } = this.props\r\n    return (\r\n      <section className={styles.container}>\r\n        <div className=\"main\">\r\n          <SideBar />\r\n          <div className=\"content\">\r\n            <div className=\"panel\">\r\n              <Skeleton loading={loading} active>\r\n                <header className={`header ${styles.header}`}>\r\n                  <h3 className={styles.title}>\r\n                    <span className={`${styles.tag} ${styles[getTagInfo(topic).className]}`}>\r\n                      {getTagInfo(topic).text}\r\n                    </span>\r\n                    {topic.title}\r\n                  </h3>\r\n                  <div className={`${styles.changes} clearfix`}>\r\n                    <span>发布于 {formatDate(topic.create_at)}</span>\r\n                    <span>作者 {topic.author && topic.author.loginname}</span>\r\n                    <span>{topic.visit_count} 次浏览</span>\r\n                    <span>最后一次编辑是 {formatDate(topic.last_reply_at)}</span>\r\n                    <span>来自 {getTagInfo(topic).text}</span>\r\n                    {accesstoken && topic.is_collect && (\r\n                      <Button size=\"small\" className={`pull-right`}>\r\n                        取消收藏\r\n                      </Button>\r\n                    )}\r\n                    {accesstoken && !topic.is_collect && (\r\n                      <Button type=\"primary\" size=\"small\" className={`pull-right`}>\r\n                        收藏\r\n                      </Button>\r\n                    )}\r\n                    <div className={styles.manage_topic}>\r\n                      <Link to={`/topic/${topic.id}/edit`}>\r\n                        <Icon type=\"form\" style={{ fontSize: '18px' }} />\r\n                      </Link>\r\n                      <a href=\"javascript:;\" onClick={() => {}}>\r\n                        <Icon type=\"delete\" style={{ fontSize: '18px' }} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </header>\r\n                <div className={`${styles.topic} inner`}>\r\n                  <div className={styles.topic_content} dangerouslySetInnerHTML={{ __html: topic.content }} />\r\n                </div>\r\n              </Skeleton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst topicsActions = { getTopic }\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    topic: state.topic.topic,\r\n    loading: state.topic.loading,\r\n    accesstoken: state.user.accesstoken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: any) => {\r\n  return {\r\n    actions: bindActionCreators(topicsActions, dispatch)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Topic)\r\n","import { Dispatch } from 'redux'\r\nimport * as constants from '../constants/topic'\r\nimport * as api from '../apis/cnode'\r\nimport { TopicDetailType } from '../utils/assist'\r\n\r\nexport type topicState = {\r\n  topic: TopicDetailType\r\n  loading: boolean\r\n}\r\ntype topicParams = {\r\n  id: string\r\n  [prop: string]: string | undefined\r\n}\r\n/**\r\n * 获取主题列表信息\r\n * @param params topicsParams\r\n */\r\nexport const getTopic = (params: topicParams) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: constants.SET_LOADING,\r\n      data: true\r\n    })\r\n\r\n    try {\r\n      const res: any = await api.getTopic(params)\r\n      let topic = {}\r\n      if (res.success) {\r\n        topic = res.data\r\n      }\r\n      dispatch({\r\n        type: constants.SET_TOPIC,\r\n        data: { topic: topic }\r\n      })\r\n      dispatch({\r\n        type: constants.SET_LOADING,\r\n        data: false\r\n      })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: constants.SET_LOADING,\r\n        data: false\r\n      })\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}